{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortNone","sortField","setSortField","sortReverse","setSortReverse","visibleGoods","goods","preparedGoods","sort","good1","good2","sortAlphabet","localeCompare","sortLength","length","reverse","getPreparedGoods","className","type","onClick","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,4EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,mBAAAA,E,oBAAAA,E,aAAAA,M,KAmCE,IAAME,EAAgB,WAC3B,MAAkCC,mBAASH,EAASI,UAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCH,oBAAS,GAA/C,mBAAOI,EAAP,KAAoBC,EAApB,KACMC,EA3BR,SACEC,EADF,GAGG,IADCL,EACF,EADEA,UAAWE,EACb,EADaA,YAEPI,EAAa,YAAOD,GAiB1B,OAfAC,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKL,EAASe,aACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKd,EAASiB,WACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAITX,GACFI,EAAcQ,UAGTR,EAMcS,CAAiBnB,EAAiB,CACrDI,YACAE,gBAGF,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMjB,EAAaN,EAASe,eACrCM,UAAWG,IAAG,iBAAkB,CAC9B,WAAYnB,IAAcL,EAASe,eAJvC,iCAUA,wBACEO,KAAK,SACLC,QAAS,kBAAMjB,EAAaN,EAASiB,aACrCI,UAAWG,IAAG,oBAAqB,CACjC,WAAYnB,IAAcL,EAASiB,aAJvC,4BAUA,wBACEK,KAAK,SACLC,QAAS,kBAAMf,GAAgBD,IAC/Bc,UAAWG,IAAG,oBAAqB,CACjC,YAA4B,IAAhBjB,IAJhB,sBASEF,GAAaE,IACb,wBACEe,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPjB,EAAaN,EAASI,UACtBI,GAAe,IALnB,sBAaJ,6BACGC,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAAoBA,aC1G9BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cdba3677.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport React, { useState } from 'react';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  sortAlphabet = 'abc',\n  sortLength = 'length',\n  sortNone = '',\n}\n\ninterface FilterParams {\n  sortField: SortType,\n  sortReverse: boolean,\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  { sortField, sortReverse }: FilterParams,\n) {\n  const preparedGoods = [...goods];\n\n  preparedGoods.sort((good1, good2) => {\n    switch (sortField) {\n      case SortType.sortAlphabet:\n        return good1.localeCompare(good2);\n      case SortType.sortLength:\n        return good1.length - good2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (sortReverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortType.sortNone);\n  const [sortReverse, setSortReverse] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer, {\n    sortField,\n    sortReverse,\n  });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SortType.sortAlphabet)}\n          className={cn('button is-info', {\n            'is-light': sortField !== SortType.sortAlphabet,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SortType.sortLength)}\n          className={cn('button is-success', {\n            'is-light': sortField !== SortType.sortLength,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortReverse(!sortReverse)}\n          className={cn('button is-warning', {\n            'is-light': sortReverse !== true,\n          })}\n        >\n          Reverse\n        </button>\n        {(sortField || sortReverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField(SortType.sortNone);\n              setSortReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}